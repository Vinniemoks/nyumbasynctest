import{j as e}from"./chart-vendor-DN03eKE6.js";import{r as t,u as a,L as n,a as i}from"./react-vendor-BntmjCQ5.js";import{X as s,M as o,L as r}from"./ui-vendor-DvsMd_iW.js";const c=[{id:1,address:"123 Riverside Drive, Nairobi",units:3,rent:25e3,occupied:!0,occupancy:100,tenant:"John Doe",leaseExpiry:"15 days",bedrooms:3,bathrooms:2,image:"https://via.placeholder.com/400x300"},{id:2,address:"456 Garden Estate, Nairobi",units:2,rent:18e3,occupied:!1,occupancy:50,tenant:null,leaseExpiry:"N/A",bedrooms:2,bathrooms:1,image:"https://via.placeholder.com/400x300"}],u=[{id:1,name:"John Doe",email:"john@example.com",phone:"+254712345678",property:"123 Riverside Drive",rentStatus:"paid",leaseEnd:"2024-12-31"},{id:2,name:"Jane Smith",email:"jane@example.com",phone:"+254723456789",property:"456 Garden Estate",rentStatus:"pending",leaseEnd:"2024-11-30"}],d=[{id:1,tenant:"John Doe",amount:25e3,status:"paid",date:"2024-01-01",dueDate:"2024-02-01",method:"mpesa"},{id:2,tenant:"Jane Smith",amount:18e3,status:"pending",dueDate:"2024-02-05",method:"bank"}],l=[{id:1,description:"Leaking faucet in kitchen",property:"123 Riverside Drive",status:"pending",priority:"medium",category:"plumbing",date:"2024-01-15",time:"2 hours ago",title:"Maintenance Request",icon:"fa-tools"},{id:2,description:"Broken AC unit",property:"456 Garden Estate",status:"in_progress",priority:"high",category:"hvac",date:"2024-01-14",time:"1 day ago",title:"Maintenance In Progress",icon:"fa-wrench"},{id:3,description:"Paint touch-up needed",property:"123 Riverside Drive",status:"completed",priority:"low",category:"general",date:"2024-01-10",time:"5 days ago",title:"Maintenance Completed",icon:"fa-check-circle"}],m={id:1,name:"John Kamau",email:"john@example.com",role:"landlord",phone:"+254712345678"},p=[{id:1,name:"James Mwangi",companyName:"Mwangi Plumbing Services",serviceTypes:["plumbing","water_heating"],phoneNumber:"+254722111222",email:"james@mwangiplumbing.co.ke",rating:4.8,reviewCount:45,availability:"available",certifications:["Licensed Plumber","Gas Fitting Certificate"],profileImage:"https://via.placeholder.com/150",description:"Professional plumbing services with over 10 years of experience. Specializing in residential and commercial plumbing repairs and installations.",reviews:[{id:1,tenantName:"Sarah K.",rating:5,comment:"Excellent service! Fixed my leaking pipes quickly and professionally.",date:"2024-01-10"},{id:2,tenantName:"David M.",rating:4,comment:"Good work, arrived on time and cleaned up after the job.",date:"2024-01-05"}]},{id:2,name:"Grace Wanjiru",companyName:"PowerFix Electrical",serviceTypes:["electrical","lighting"],phoneNumber:"+254733222333",email:"grace@powerfix.co.ke",rating:4.9,reviewCount:67,availability:"available",certifications:["Licensed Electrician","Safety Certified"],profileImage:"https://via.placeholder.com/150",description:"Certified electrical contractor providing safe and reliable electrical services for homes and businesses.",reviews:[{id:1,tenantName:"John D.",rating:5,comment:"Very professional and knowledgeable. Fixed all my electrical issues.",date:"2024-01-12"}]},{id:3,name:"Peter Omondi",companyName:"CoolAir HVAC Solutions",serviceTypes:["hvac","air_conditioning"],phoneNumber:"+254744333444",email:"peter@coolair.co.ke",rating:4.6,reviewCount:38,availability:"busy",certifications:["HVAC Technician","Refrigeration License"],profileImage:"https://via.placeholder.com/150",description:"Expert HVAC installation, repair, and maintenance services. Keeping your home comfortable year-round.",reviews:[{id:1,tenantName:"Mary N.",rating:5,comment:"Fixed my AC unit in no time. Great service!",date:"2024-01-08"},{id:2,tenantName:"Tom W.",rating:4,comment:"Professional and efficient. Highly recommend.",date:"2024-01-03"}]},{id:4,name:"Lucy Akinyi",companyName:"HomeRepair Pro",serviceTypes:["general_repair","carpentry","painting"],phoneNumber:"+254755444555",email:"lucy@homerepairpro.co.ke",rating:4.7,reviewCount:52,availability:"available",certifications:["General Contractor","Carpentry Certificate"],profileImage:"https://via.placeholder.com/150",description:"All-around home repair and maintenance services. From small fixes to major renovations.",reviews:[{id:1,tenantName:"James K.",rating:5,comment:"Did an amazing job painting my apartment. Very neat work.",date:"2024-01-11"}]},{id:5,name:"Michael Kipchoge",companyName:"ApplianceFix Kenya",serviceTypes:["appliances","refrigeration"],phoneNumber:"+254766555666",email:"michael@appliancefix.co.ke",rating:4.5,reviewCount:29,availability:"available",certifications:["Appliance Repair Specialist"],profileImage:"https://via.placeholder.com/150",description:"Specialized in repairing all types of home appliances. Fast and reliable service.",reviews:[{id:1,tenantName:"Anne M.",rating:4,comment:"Fixed my washing machine quickly. Fair pricing.",date:"2024-01-09"}]},{id:6,name:"Daniel Mutua",companyName:"SecureHome Locksmiths",serviceTypes:["locksmith","security"],phoneNumber:"+254777666777",email:"daniel@securehome.co.ke",rating:4.9,reviewCount:41,availability:"available",certifications:["Licensed Locksmith","Security Systems Certified"],profileImage:"https://via.placeholder.com/150",description:"24/7 locksmith and security services. Emergency lockout assistance available.",reviews:[{id:1,tenantName:"Robert L.",rating:5,comment:"Came quickly when I was locked out. Very professional.",date:"2024-01-13"}]},{id:7,name:"Catherine Njeri",companyName:"CleanPro Services",serviceTypes:["cleaning","pest_control"],phoneNumber:"+254788777888",email:"catherine@cleanpro.co.ke",rating:4.8,reviewCount:73,availability:"available",certifications:["Professional Cleaning Certificate","Pest Control License"],profileImage:"https://via.placeholder.com/150",description:"Professional cleaning and pest control services for residential and commercial properties.",reviews:[{id:1,tenantName:"Susan W.",rating:5,comment:"Excellent deep cleaning service. My apartment looks brand new!",date:"2024-01-14"}]},{id:8,name:"Joseph Kamau",companyName:"GreenGarden Landscaping",serviceTypes:["landscaping","gardening"],phoneNumber:"+254799888999",email:"joseph@greengarden.co.ke",rating:4.6,reviewCount:34,availability:"busy",certifications:["Landscape Designer","Horticulture Certificate"],profileImage:"https://via.placeholder.com/150",description:"Professional landscaping and garden maintenance services. Creating beautiful outdoor spaces.",reviews:[{id:1,tenantName:"Emily R.",rating:5,comment:"Transformed my garden beautifully. Very creative!",date:"2024-01-07"}]}],g=(e=500)=>new Promise(t=>setTimeout(t,e));const h=new class{constructor(){this.baseURL="http://localhost:3001/api",this.token=localStorage.getItem("authToken"),this.useMockData=!0}setAuthToken(e){this.token=e,e?localStorage.setItem("authToken",e):localStorage.removeItem("authToken")}getAuthToken(){return this.token||localStorage.getItem("authToken")}async request(e,t={}){const a=`${this.baseURL}${e}`,n={headers:{"Content-Type":"application/json",...this.getAuthToken()&&{Authorization:`Bearer ${this.getAuthToken()}`}}},i={...n,...t,headers:{...n.headers,...t.headers}};try{const e=await fetch(a,i),t=e.headers.get("content-type");let n;if(n=t&&t.includes("application/json")?await e.json():await e.text(),!e.ok)throw new Error(n.message||`HTTP error! status: ${e.status}`);return n}catch(s){throw s}}async get(e,t={}){const a=new URLSearchParams(t).toString(),n=a?`${e}?${a}`:e;return this.request(n,{method:"GET"})}async post(e,t={}){return this.request(e,{method:"POST",body:JSON.stringify(t)})}async put(e,t={}){return this.request(e,{method:"PUT",body:JSON.stringify(t)})}async delete(e){return this.request(e,{method:"DELETE"})}async patch(e,t={}){return this.request(e,{method:"PATCH",body:JSON.stringify(t)})}async uploadFile(e,t,a={}){const n=new FormData;return n.append("file",t),Object.keys(a).forEach(e=>{n.append(e,a[e])}),this.request(e,{method:"POST",body:n,headers:{...this.getAuthToken()&&{Authorization:`Bearer ${this.getAuthToken()}`}}})}async login(e){if(this.useMockData){await g();const t="mock-token-"+Date.now();return this.setAuthToken(t),{token:t,user:{...m,role:e.role||"tenant"}}}const t=await this.post("/auth/login",e);return t.token&&this.setAuthToken(t.token),t}async signup(e){if(this.useMockData){await g();const t="mock-token-"+Date.now();return this.setAuthToken(t),{token:t,user:{...m,...e,id:Date.now()}}}return this.post("/auth/signup",e)}async logout(){if(this.useMockData)return await g(200),this.setAuthToken(null),{success:!0};await this.post("/auth/logout"),this.setAuthToken(null)}async refreshToken(){if(this.useMockData)return await g(),{token:this.getAuthToken()};const e=await this.post("/auth/refresh");return e.token&&this.setAuthToken(e.token),e}async getCurrentUser(){return this.useMockData?(await g(),m):this.get("/auth/me")}async getProperties(e={}){return this.useMockData?(await g(),c):this.get("/properties",e)}async createProperty(e){if(this.useMockData){await g();const t={...e,id:Date.now(),occupancy:0,occupied:!1};return c.push(t),t}return this.post("/properties",e)}async updateProperty(e,t){if(this.useMockData){await g();const a=c.findIndex(t=>t.id===e);if(-1!==a)return c[a]={...c[a],...t},c[a];throw new Error("Property not found")}return this.put(`/properties/${e}`,t)}async deleteProperty(e){if(this.useMockData){await g();const t=c.findIndex(t=>t.id===e);if(-1!==t)return c.splice(t,1),{success:!0};throw new Error("Property not found")}return this.delete(`/properties/${e}`)}async getTenants(e={}){return this.useMockData?(await g(),u):this.get("/tenants",e)}async createTenant(e){if(this.useMockData){await g();const t={...e,id:Date.now()};return u.push(t),t}return this.post("/tenants",e)}async getTenantProfile(){return this.useMockData?(await g(),{id:1,userId:m.id,firstName:m.firstName||"John",lastName:m.lastName||"Doe",email:m.email,phoneNumber:m.phone||"+254712345678",currentPropertyId:1,currentLeaseId:1,emergencyContact:{name:"Jane Doe",phone:"+254712345679",relationship:"Spouse"},preferences:{notifications:!0,autoPayEnabled:!1}}):this.get("/tenant/profile")}async getProperty(e){if(this.useMockData){await g();const t=c.find(t=>t.id===e);if(!t)throw new Error("Property not found");return{id:t.id,address:t.address,unitNumber:t.unitNumber||"A1",propertyType:t.type||"apartment",squareFootage:t.squareFootage||1200,bedrooms:t.bedrooms||2,bathrooms:t.bathrooms||2,amenities:["Parking","Gym","Pool","Security"],images:[t.image||"https://via.placeholder.com/400x300"],stakeholder:{name:"Property Manager",email:"manager@example.com",phone:"+254712345670",role:"manager"}}}return this.get(`/properties/${e}`)}async getLease(e){if(this.useMockData){await g();const t=new Date,a=new Date(t.getFullYear(),t.getMonth()-6,1),n=new Date(t.getFullYear()+1,t.getMonth()-6,1);return{id:e,startDate:a.toISOString(),endDate:n.toISOString(),monthlyRent:5e4,securityDeposit:5e4,status:"active",documentUrl:"/documents/lease-agreement.pdf"}}return this.get(`/leases/${e}`)}async getRentPayments(e={}){return this.useMockData?(await g(),d):this.get("/rent-payments",e)}async createRentPayment(e){if(this.useMockData){await g();const t={...e,id:Date.now(),status:"paid",date:(new Date).toISOString()};return d.push(t),t}return this.post("/rent-payments",e)}async getMaintenanceRequests(e={}){return this.useMockData?(await g(),l):this.get("/maintenance-requests",e)}async createMaintenanceRequest(e){if(this.useMockData){await g();const t=Date.now(),a=`TKT-${t}-${Math.floor(1e3*Math.random()).toString().padStart(3,"0")}`,n={...e,id:t,ticketNumber:a,status:"submitted",date:(new Date).toISOString().split("T")[0],time:"Just now",createdAt:(new Date).toISOString()};return l.unshift(n),n}return this.post("/tenant/maintenance",e)}async getMaintenanceRequest(e){if(this.useMockData){await g();const t=l.find(t=>t.id===parseInt(e));if(!t)throw new Error("Maintenance request not found");return{...t,statusHistory:[{status:t.status,timestamp:t.createdAt||(new Date).toISOString(),note:this.getStatusNote(t.status)}],assignedVendor:t.assignedVendor?{id:1,name:t.assignedVendor,phone:"+254722111222",estimatedArrival:"Within 24 hours"}:null}}return this.get(`/tenant/maintenance/${e}`)}getStatusNote(e){return{submitted:"Your maintenance request has been submitted and is awaiting review.",assigned:"A vendor has been assigned to your request and will contact you soon.",in_progress:"The vendor is currently working on resolving your issue.",completed:"Your maintenance request has been completed.",cancelled:"This maintenance request has been cancelled."}[e]||"Status updated."}async updateMaintenanceRequest(e,t){if(this.useMockData){await g();const a=l.findIndex(t=>t.id===parseInt(e));if(-1!==a)return l[a]={...l[a],...t},l[a];throw new Error("Maintenance request not found")}return this.put(`/tenant/maintenance/${e}`,t)}async rateMaintenanceRequest(e,t,a){if(this.useMockData){await g();const n=l.findIndex(t=>t.id===parseInt(e));if(-1!==n)return l[n]={...l[n],rating:t,feedback:a,ratedAt:(new Date).toISOString()},{success:!0,message:"Thank you for your feedback!"};throw new Error("Maintenance request not found")}return this.post(`/tenant/maintenance/${e}/rate`,{rating:t,feedback:a})}async getFinancialReport(e={}){return this.useMockData?(await g(),{totalIncome:d.reduce((e,t)=>e+t.amount,0),totalExpenses:5e4,netIncome:12e4}):this.get("/reports/financial",e)}async getOccupancyReport(e={}){if(this.useMockData){await g();const e=c.reduce((e,t)=>e+t.units,0),t=c.filter(e=>e.occupied).reduce((e,t)=>e+t.units,0);return{totalUnits:e,occupiedUnits:t,vacantUnits:e-t,occupancyRate:t/e*100}}return this.get("/reports/occupancy",e)}async getVendors(e={}){if(this.useMockData){await g();let t=[...p];return e.serviceTypes&&e.serviceTypes.length>0&&(t=t.filter(t=>t.serviceTypes.some(t=>e.serviceTypes.includes(t)))),e.minRating&&(t=t.filter(t=>t.rating>=e.minRating)),e.availability&&(t=t.filter(t=>t.availability===e.availability)),t}return this.get("/tenant/vendors",e)}async getVendor(e){if(this.useMockData){await g();const t=p.find(t=>t.id===parseInt(e));if(!t)throw new Error("Vendor not found");return t}return this.get(`/tenant/vendors/${e}`)}async contactVendor(e,t){return this.useMockData?(await g(),{success:!0,message:"Your message has been sent to the vendor"}):this.post(`/tenant/vendors/${e}/contact`,{message:t})}async requestService(e,t){return this.useMockData?(await g(),{success:!0,requestId:Date.now(),message:"Service request submitted successfully"}):this.post(`/tenant/vendors/${e}/request`,t)}async submitMoveOutRequest(e){if(this.useMockData){await g();const t=`MO-${Date.now().toString().slice(-8)}`,a={id:Date.now(),referenceNumber:t,propertyId:e.propertyId,leaseId:e.leaseId,moveOutDate:e.moveOutDate,reason:e.reason,status:"pending",submittedAt:(new Date).toISOString(),stakeholderNotified:!0};return window.mockMoveOutRequests||(window.mockMoveOutRequests=[]),window.mockMoveOutRequests.push(a),{success:!0,referenceNumber:t,moveOutRequest:a}}return this.post("/tenant/move-out/request",e)}async getMoveOutStatus(e){if(this.useMockData){await g();const t=(window.mockMoveOutRequests||[]).find(t=>t.id===e);return t||{id:e,referenceNumber:`MO-${Date.now().toString().slice(-8)}`,status:"pending",moveOutDate:new Date(Date.now()+3888e6).toISOString(),submittedAt:(new Date).toISOString(),statusHistory:[{status:"pending",timestamp:(new Date).toISOString(),note:"Move-out request submitted and awaiting review"}]}}return this.get(`/tenant/move-out/status/${e}`)}async getCurrentMoveOutRequest(){if(this.useMockData){await g();const e=window.mockMoveOutRequests||[];if(e.length>0){const t=e[e.length-1];return{...t,statusHistory:[{status:"pending",timestamp:t.submittedAt,note:"Move-out request submitted and awaiting review"}]}}return null}return this.get("/tenant/move-out/current")}async cancelMoveOutRequest(e){if(this.useMockData){await g();const t=window.mockMoveOutRequests||[],a=t.findIndex(t=>t.id===e);if(-1!==a)return t[a].status="cancelled",{success:!0,message:"Move-out request cancelled"};throw new Error("Move-out request not found")}return this.delete(`/tenant/move-out/request/${e}`)}async requestDepositRefund(e){if(this.useMockData){await g();const t=(new Date).toISOString(),a={id:Date.now(),moveOutRequestId:e.moveOutRequestId,depositAmount:e.depositAmount||5e4,status:"submitted",submittedAt:t,stages:[{stage:"submitted",completed:!0,timestamp:t},{stage:"inspection",completed:!1,timestamp:null},{stage:"approved",completed:!1,timestamp:null},{stage:"paid",completed:!1,timestamp:null}],statusHistory:[{status:"submitted",timestamp:t,note:"Your deposit refund request has been submitted and is being reviewed by the property stakeholder."}],deductions:[],paymentDetails:null};return window.mockDepositRefunds||(window.mockDepositRefunds=[]),window.mockDepositRefunds.push(a),{success:!0,refundRequest:a}}return this.post("/tenant/deposit/refund",e)}async getDepositRefundStatus(e){if(this.useMockData){await g();const t=(window.mockDepositRefunds||[]).find(t=>t.id===e);return t||null}return this.get(`/tenant/deposit/status/${e}`)}async getCurrentDepositRefund(){if(this.useMockData){await g();const e=window.mockDepositRefunds||[];return e.length>0?e[e.length-1]:null}return this.get("/tenant/deposit/current")}async getDocuments(){return this.useMockData?(await g(),window.mockDocuments||(window.mockDocuments=[{id:1,name:"Lease Agreement 2024.pdf",category:"lease",fileUrl:"/documents/lease-agreement.pdf",fileType:"application/pdf",fileSize:2457600,uploadedAt:new Date(Date.now()-2592e6).toISOString(),uploadedBy:"Property Manager"},{id:2,name:"Move-in Inspection Report.pdf",category:"inspection",fileUrl:"/documents/inspection-report.pdf",fileType:"application/pdf",fileSize:1536e3,uploadedAt:new Date(Date.now()-216e7).toISOString(),uploadedBy:"Property Manager"},{id:3,name:"Renters Insurance Policy.pdf",category:"insurance",fileUrl:"/documents/insurance-policy.pdf",fileType:"application/pdf",fileSize:3145728,uploadedAt:new Date(Date.now()-1728e6).toISOString(),uploadedBy:"You"},{id:4,name:"Utility Bill - January 2024.pdf",category:"utilities",fileUrl:"/documents/utility-bill-jan.pdf",fileType:"application/pdf",fileSize:512e3,uploadedAt:new Date(Date.now()-1296e6).toISOString(),uploadedBy:"Property Manager"},{id:5,name:"Property Photos.jpg",category:"personal",fileUrl:"/documents/property-photos.jpg",fileType:"image/jpeg",fileSize:4194304,uploadedAt:new Date(Date.now()-864e6).toISOString(),uploadedBy:"You"},{id:6,name:"Parking Pass.pdf",category:"other",fileUrl:"/documents/parking-pass.pdf",fileType:"application/pdf",fileSize:204800,uploadedAt:new Date(Date.now()-432e6).toISOString(),uploadedBy:"Property Manager"}]),window.mockDocuments):this.get("/tenant/documents")}async uploadDocument(e,t){if(this.useMockData){await g(1e3);const a={id:Date.now(),name:e.name,category:t,fileUrl:URL.createObjectURL(e),fileType:e.type,fileSize:e.size,uploadedAt:(new Date).toISOString(),uploadedBy:"You"};return window.mockDocuments||(window.mockDocuments=[]),window.mockDocuments.unshift(a),a}return this.uploadFile("/tenant/documents",e,{category:t})}async deleteDocument(e){if(this.useMockData){await g();const t=window.mockDocuments||[],a=t.findIndex(t=>t.id===e);if(-1!==a)return t.splice(a,1),{success:!0};throw new Error("Document not found")}return this.delete(`/tenant/documents/${e}`)}async downloadDocument(e){if(this.useMockData){await g();const t=(window.mockDocuments||[]).find(t=>t.id===e);if(!t)throw new Error("Document not found");return t.fileUrl}return this.get(`/tenant/documents/${e}/download`)}async updateDepositRefundStatus(e,t){var a;if(this.useMockData){await g();const n=(window.mockDepositRefunds||[]).find(t=>t.id===e);if(!n)throw new Error("Refund request not found");const i=(new Date).toISOString(),s=["submitted","inspection","approved","paid"],o=s.indexOf(n.status),r=s.indexOf(t);if(r>o){n.status=t;for(let t=0;t<=r;t++)n.stages[t].completed=!0,n.stages[t].timestamp||(n.stages[t].timestamp=i);const e={inspection:"Property inspection has been scheduled. An inspector will visit the property to assess its condition.",approved:"Your deposit refund has been approved. The payment is being processed.",paid:"Your deposit refund has been successfully processed and paid to your account."};return n.statusHistory.push({status:t,timestamp:i,note:e[t]||`Status updated to ${t}`}),"paid"===t&&(n.paymentDetails={paymentDate:i,amount:n.depositAmount-((null==(a=n.deductions)?void 0:a.reduce((e,t)=>e+t.amount,0))||0),transactionReference:`REF-${Date.now().toString().slice(-10)}`,paymentMethod:"Bank Transfer"}),{success:!0,refund:n}}throw new Error("Invalid status transition")}return this.put(`/tenant/deposit/refund/${e}/status`,{status:t})}async getMessages(){return this.useMockData?(await g(),window.mockMessages||(window.mockMessages=[{id:1,from:"Property Manager",to:"tenant@example.com",subject:"Rent Payment Confirmation",message:"Thank you for your rent payment. We have received your payment for this month.",timestamp:new Date(Date.now()-1728e5).toISOString(),read:!0},{id:2,from:"Property Manager",to:"tenant@example.com",subject:"Maintenance Update",message:"Your maintenance request has been assigned to a vendor. They will contact you within 24 hours.",timestamp:new Date(Date.now()-18e6).toISOString(),read:!1}]),window.mockMessages):this.get("/tenant/messages")}async sendMessage(e){if(this.useMockData){await g();const t={id:Date.now(),from:"You",to:e.to,toName:e.toName,subject:e.subject,message:e.message,priority:e.priority,timestamp:(new Date).toISOString(),read:!0,sent:!0};return window.mockMessages||(window.mockMessages=[]),window.mockMessages.unshift(t),{success:!0,message:t}}return this.post("/tenant/messages",e)}async markMessageAsRead(e){if(this.useMockData){await g();const t=(window.mockMessages||[]).find(t=>t.id===e);return t&&(t.read=!0),{success:!0}}return this.put(`/tenant/messages/${e}/read`)}async getIssues(){return this.useMockData?(await g(),window.mockIssues||(window.mockIssues=[{id:1,ticketNumber:"TKT-12345678-001",category:"maintenance",subject:"Leaking faucet in kitchen",description:"The kitchen faucet has been leaking for the past few days. Water drips constantly even when fully closed.",priority:"normal",status:"open",estimatedResponseTime:"24 hours",createdAt:new Date(Date.now()-2592e5).toISOString()},{id:2,ticketNumber:"TKT-12345679-002",category:"billing",subject:"Question about utility charges",description:"I noticed an increase in my utility bill this month. Can you provide a breakdown of the charges?",priority:"low",status:"in_progress",estimatedResponseTime:"24 hours",createdAt:new Date(Date.now()-6048e5).toISOString(),response:"We are reviewing your utility usage and will provide a detailed breakdown within 24 hours.",responseAt:new Date(Date.now()-5184e5).toISOString()}]),window.mockIssues):this.get("/tenant/issues")}async createIssue(e){if(this.useMockData){await g();const t={id:Date.now(),...e};return window.mockIssues||(window.mockIssues=[]),window.mockIssues.unshift(t),t}return this.post("/tenant/issues",e)}async updateIssue(e,t){if(this.useMockData){await g();const a=window.mockIssues||[],n=a.findIndex(t=>t.id===e);if(-1!==n)return a[n]={...a[n],...t},a[n];throw new Error("Issue not found")}return this.put(`/tenant/issues/${e}`,t)}async getUtilityBills(){if(this.useMockData){if(await g(),!window.mockUtilityBills){const e=new Date,t=e.getMonth(),a=e.getFullYear();window.mockUtilityBills=[{id:1,propertyId:1,utilityType:"water",billingPeriod:{startDate:new Date(a,t,1).toISOString(),endDate:new Date(a,t+1,0).toISOString()},usage:45,usageUnit:"m³",amount:3500,dueDate:new Date(a,t+1,5).toISOString(),status:"pending",previousUsage:42,usageIncrease:7},{id:2,propertyId:1,utilityType:"electricity",billingPeriod:{startDate:new Date(a,t,1).toISOString(),endDate:new Date(a,t+1,0).toISOString()},usage:320,usageUnit:"kWh",amount:8500,dueDate:new Date(a,t+1,5).toISOString(),status:"pending",previousUsage:260,usageIncrease:23},{id:3,propertyId:1,utilityType:"internet",billingPeriod:{startDate:new Date(a,t,1).toISOString(),endDate:new Date(a,t+1,0).toISOString()},usage:500,usageUnit:"GB",amount:5e3,dueDate:new Date(a,t+1,5).toISOString(),status:"pending",previousUsage:480,usageIncrease:4},{id:4,propertyId:1,utilityType:"water",billingPeriod:{startDate:new Date(a,t-1,1).toISOString(),endDate:new Date(a,t,0).toISOString()},usage:42,usageUnit:"m³",amount:3200,dueDate:new Date(a,t,5).toISOString(),status:"paid",paidDate:new Date(a,t,3).toISOString(),previousUsage:40,usageIncrease:5},{id:5,propertyId:1,utilityType:"electricity",billingPeriod:{startDate:new Date(a,t-1,1).toISOString(),endDate:new Date(a,t,0).toISOString()},usage:260,usageUnit:"kWh",amount:7200,dueDate:new Date(a,t,5).toISOString(),status:"paid",paidDate:new Date(a,t,4).toISOString(),previousUsage:250,usageIncrease:4},{id:6,propertyId:1,utilityType:"internet",billingPeriod:{startDate:new Date(a,t-1,1).toISOString(),endDate:new Date(a,t,0).toISOString()},usage:480,usageUnit:"GB",amount:5e3,dueDate:new Date(a,t,5).toISOString(),status:"paid",paidDate:new Date(a,t,2).toISOString(),previousUsage:470,usageIncrease:2}];for(let n=2;n<=12;n++){const e=t-n,i=e<0?a-1:a,s=e<0?12+e:e;window.mockUtilityBills.push({id:100+3*n,propertyId:1,utilityType:"water",billingPeriod:{startDate:new Date(i,s,1).toISOString(),endDate:new Date(i,s+1,0).toISOString()},usage:38+Math.floor(10*Math.random()),usageUnit:"m³",amount:3e3+Math.floor(1e3*Math.random()),dueDate:new Date(i,s+1,5).toISOString(),status:"paid",paidDate:new Date(i,s+1,3).toISOString()},{id:101+3*n,propertyId:1,utilityType:"electricity",billingPeriod:{startDate:new Date(i,s,1).toISOString(),endDate:new Date(i,s+1,0).toISOString()},usage:240+Math.floor(40*Math.random()),usageUnit:"kWh",amount:6500+Math.floor(2e3*Math.random()),dueDate:new Date(i,s+1,5).toISOString(),status:"paid",paidDate:new Date(i,s+1,4).toISOString()},{id:102+3*n,propertyId:1,utilityType:"internet",billingPeriod:{startDate:new Date(i,s,1).toISOString(),endDate:new Date(i,s+1,0).toISOString()},usage:450+Math.floor(100*Math.random()),usageUnit:"GB",amount:5e3,dueDate:new Date(i,s+1,5).toISOString(),status:"paid",paidDate:new Date(i,s+1,2).toISOString()})}}return window.mockUtilityBills}return this.get("/tenant/utilities")}async getUtilityBill(e){if(this.useMockData){await g();const t=(window.mockUtilityBills||[]).find(t=>t.id===parseInt(e));if(!t)throw new Error("Utility bill not found");return t}return this.get(`/tenant/utilities/${e}`)}async splitUtilityBill(e,t){if(this.useMockData){await g();const a=window.mockUtilityBills||[],n=a.findIndex(t=>t.id===parseInt(e));if(-1!==n)return a[n]={...a[n],splitWith:t.roommates,splitType:t.splitType,customSplits:t.customSplits},{success:!0,bill:a[n],splits:this.calculateSplits(a[n],t)};throw new Error("Utility bill not found")}return this.post(`/tenant/utilities/${e}/split`,t)}calculateSplits(e,t){const{roommates:a,splitType:n,customSplits:i}=t,s=a.length+1;if("equal"===n){const t=e.amount/s;return[{name:"You",amount:t,percentage:(100/s).toFixed(1)},...a.map(e=>({name:e.name,amount:t,percentage:(100/s).toFixed(1)}))]}return[{name:"You",amount:e.amount*(i.you/100),percentage:i.you},...a.map((t,a)=>({name:t.name,amount:e.amount*(i[`roommate_${a}`]/100),percentage:i[`roommate_${a}`]}))]}async payUtilityBill(e,t){if(this.useMockData){await g();const a=window.mockUtilityBills||[],n=a.findIndex(t=>t.id===parseInt(e));if(-1!==n)return a[n]={...a[n],status:"paid",paidDate:(new Date).toISOString(),paymentMethod:t.paymentMethod,transactionReference:`TXN-${Date.now()}`},setTimeout(()=>{},2e3),{success:!0,bill:a[n],message:"Payment processed successfully"};throw new Error("Utility bill not found")}return this.post(`/tenant/utilities/${e}/pay`,t)}async getUtilityUsageTrends(e,t=12){if(this.useMockData){await g();return(window.mockUtilityBills||[]).filter(t=>t.utilityType===e).sort((e,t)=>new Date(e.billingPeriod.startDate)-new Date(t.billingPeriod.startDate)).slice(-t).map(e=>({month:new Date(e.billingPeriod.startDate).toLocaleDateString("en-US",{month:"short",year:"numeric"}),usage:e.usage,amount:e.amount,usageUnit:e.usageUnit}))}return this.get("/tenant/utilities/trends",{utilityType:e,months:t})}async getAnnouncements(){if(this.useMockData){if(await g(),!window.mockAnnouncements){const e=new Date;window.mockAnnouncements=[{id:1,title:"Building Maintenance Schedule - Elevator Service",message:"Dear Residents,\n\nPlease be informed that the main elevator will undergo routine maintenance on Saturday, November 2nd, from 8:00 AM to 2:00 PM. During this time, please use the service elevator or stairs.\n\nWe apologize for any inconvenience and appreciate your cooperation.",author:"Property Management",category:"Maintenance",priority:"high",postedAt:new Date(e.getTime()-72e5).toISOString(),read:!1},{id:2,title:"Gym Equipment Upgrade Complete",message:"Great news! The gym has been upgraded with new cardio equipment including treadmills, ellipticals, and stationary bikes. The gym is now open with extended hours from 5:00 AM to 11:00 PM daily.\n\nEnjoy your workouts!",author:"Facilities Manager",category:"Amenities",priority:"medium",postedAt:new Date(e.getTime()-864e5).toISOString(),read:!1,attachments:[{name:"Gym_Schedule.pdf",url:"/documents/gym-schedule.pdf"}]},{id:3,title:"Holiday Parking Arrangements",message:"As we approach the holiday season, please note that visitor parking will be available on a first-come, first-served basis. Residents are reminded to inform their guests to register at the security desk upon arrival.\n\nHappy Holidays!",author:"Security Team",category:"Parking",priority:"low",postedAt:new Date(e.getTime()-2592e5).toISOString(),read:!0},{id:4,title:"URGENT: Water Supply Interruption",message:"URGENT NOTICE:\n\nDue to emergency repairs on the main water line, water supply will be interrupted tomorrow (November 1st) from 9:00 AM to 3:00 PM.\n\nPlease store sufficient water for your needs during this period. We apologize for the short notice and any inconvenience caused.",author:"Property Management",category:"Utilities",priority:"urgent",postedAt:new Date(e.getTime()-18e6).toISOString(),read:!1},{id:5,title:"Community BBQ Event - This Weekend",message:"Join us for our annual Community BBQ this Saturday at 4:00 PM in the courtyard!\n\nFood and drinks will be provided. It's a great opportunity to meet your neighbors and enjoy some delicious food.\n\nRSVP by Friday to help us with planning.",author:"Community Manager",category:"Events",priority:"medium",postedAt:new Date(e.getTime()-1728e5).toISOString(),read:!0,actionUrl:"/tenant-dashboard/community/events/bbq",actionText:"RSVP Now"},{id:6,title:"New Package Delivery System",message:"We have installed a new smart package locker system in the lobby. You will receive a unique code via SMS when a package arrives for you. The code is valid for 48 hours.\n\nFor packages too large for the lockers, please collect them from the front desk during office hours (9 AM - 6 PM).",author:"Property Management",category:"Services",priority:"medium",postedAt:new Date(e.getTime()-6048e5).toISOString(),read:!0},{id:7,title:"Pool Reopening After Winter Maintenance",message:"The swimming pool has completed its annual winter maintenance and deep cleaning. We are pleased to announce that the pool will reopen on Monday, November 4th.\n\nNew pool hours:\nMonday - Friday: 6:00 AM - 9:00 PM\nWeekends: 7:00 AM - 10:00 PM\n\nPlease remember to follow pool rules and regulations.",author:"Facilities Manager",category:"Amenities",priority:"low",postedAt:new Date(e.getTime()-3456e5).toISOString(),read:!0}]}return window.mockAnnouncements.sort((e,t)=>new Date(t.postedAt)-new Date(e.postedAt))}return this.get("/tenant/announcements")}async markAnnouncementAsRead(e){if(this.useMockData){await g(200);const t=(window.mockAnnouncements||[]).find(t=>t.id===e);return t&&(t.read=!0),{success:!0}}return this.put(`/tenant/announcements/${e}/read`)}async getBulletinPosts(){if(this.useMockData){if(await g(),!window.mockBulletinPosts){const e=new Date;window.mockBulletinPosts=[{id:1,author:"Sarah Johnson",authorUnit:"Unit 305",title:"Looking for a dog walker",content:"Hi neighbors! I'm looking for a reliable dog walker for my golden retriever. Preferably someone in the building. Please contact me if interested!",postedAt:new Date(e.getTime()-108e5).toISOString(),category:"Services",image:null},{id:2,author:"Mike Chen",authorUnit:"Unit 412",title:"Selling furniture - Moving out sale",content:"Moving out next month and selling furniture:\n- Sofa (3-seater, grey) - $300\n- Dining table with 4 chairs - $200\n- Queen bed frame - $150\n\nAll items in excellent condition. DM me for photos and details.",postedAt:new Date(e.getTime()-864e5).toISOString(),category:"For Sale",image:null},{id:3,author:"Emily Rodriguez",authorUnit:"Unit 208",title:"Lost cat - Please help!",content:'My orange tabby cat "Whiskers" went missing yesterday evening. He\'s very friendly and wearing a blue collar with a bell. If you see him, please contact me immediately. Reward offered!',postedAt:new Date(e.getTime()-648e5).toISOString(),category:"Lost & Found",image:"https://via.placeholder.com/400x300/FF8C00/FFFFFF?text=Orange+Cat"},{id:4,author:"David Park",authorUnit:"Unit 501",title:"Carpool to downtown - Daily commute",content:"Looking for people interested in carpooling to downtown area for work. I leave around 7:30 AM and return around 6:00 PM. Can share gas costs. Let me know if interested!",postedAt:new Date(e.getTime()-1728e5).toISOString(),category:"Carpool",image:null},{id:5,author:"Lisa Thompson",authorUnit:"Unit 103",title:"Yoga class in the courtyard - Sundays",content:"Starting a free community yoga class every Sunday at 8:00 AM in the courtyard (weather permitting). All levels welcome! Bring your own mat. Hope to see you there!",postedAt:new Date(e.getTime()-432e6).toISOString(),category:"Activities",image:null}]}return window.mockBulletinPosts.sort((e,t)=>new Date(t.postedAt)-new Date(e.postedAt))}return this.get("/tenant/bulletin")}async createBulletinPost(e){if(this.useMockData){await g();const t={id:Date.now(),author:"You",authorUnit:"Your Unit",title:e.title,content:e.content,category:e.category,image:e.image?URL.createObjectURL(e.image):null,postedAt:(new Date).toISOString()};return window.mockBulletinPosts||(window.mockBulletinPosts=[]),window.mockBulletinPosts.unshift(t),{success:!0,post:t}}return e.image?this.uploadFile("/tenant/bulletin",e.image,{title:e.title,content:e.content,category:e.category}):this.post("/tenant/bulletin",e)}async reportCommonAreaIssue(e){if(this.useMockData){await g();const t={id:Date.now(),ticketNumber:`CA-${Date.now().toString().slice(-8)}`,location:e.location,description:e.description,priority:e.priority||"normal",status:"submitted",reportedBy:"You",reportedAt:(new Date).toISOString(),images:e.images||[]};return window.mockCommonAreaIssues||(window.mockCommonAreaIssues=[]),window.mockCommonAreaIssues.unshift(t),setTimeout(()=>{},500),{success:!0,issue:t,message:"Issue reported successfully. Property management has been notified."}}return this.post("/tenant/issues/common-area",e)}async requestLeaseRenewal(e){if(this.useMockData){await g();const t={id:Date.now(),leaseId:e.leaseId,requestedAt:(new Date).toISOString(),status:"pending",message:e.message,preferredTerms:e.preferredTerms};return window.mockLeaseRenewals||(window.mockLeaseRenewals=[]),window.mockLeaseRenewals.push(t),setTimeout(()=>{},500),{success:!0,renewalRequest:t,message:"Your lease renewal request has been submitted successfully. The property manager will review and respond within 3-5 business days."}}return this.post("/tenant/lease/renew",e)}async getRenewalTerms(e){if(this.useMockData){await g();const t=(window.mockLeaseRenewals||[]).find(t=>t.leaseId===e&&t.proposedTerms);return t?t.proposedTerms:{id:Date.now(),leaseId:e,proposedRent:52500,leaseDuration:12,startDate:new Date(Date.now()+2592e6).toISOString(),terms:["Monthly rent will be KES 52,500 (5% increase from current rent)","Lease term will be 12 months","Security deposit remains the same","All other terms and conditions remain unchanged","Rent payment due on the 1st of each month","Late payment fee of KES 2,000 applies after 5 days"],additionalNotes:"Thank you for being a valued tenant. We look forward to continuing our relationship.",expiresAt:new Date(Date.now()+12096e5).toISOString()}}return this.get(`/tenant/lease/${e}/renewal-terms`)}async acceptRenewalTerms(e,t){if(this.useMockData){await g();const a={id:Date.now(),renewalId:e,acceptedAt:(new Date).toISOString(),signature:t.signature,signedBy:t.signedBy,ipAddress:"192.168.1.1",status:"accepted"};window.mockRenewalAcceptances||(window.mockRenewalAcceptances=[]),window.mockRenewalAcceptances.push(a);return{success:!0,acceptance:a,leaseAgreement:{id:Date.now(),documentUrl:`/documents/lease-renewal-${Date.now()}.pdf`,generatedAt:(new Date).toISOString(),status:"active"},message:"Congratulations! Your lease renewal has been accepted and a new lease agreement has been generated."}}return this.post(`/tenant/lease/renewal/${e}/accept`,t)}async declineRenewalTerms(e,t){return this.useMockData?(await g(),{success:!0,message:"Renewal terms declined. The property manager has been notified."}):this.post(`/tenant/lease/renewal/${e}/decline`,{reason:t})}async getRenewalStatus(e){if(this.useMockData){await g();const t=(window.mockLeaseRenewals||[]).find(t=>t.leaseId===e);return t||null}return this.get(`/tenant/lease/${e}/renewal-status`)}async getEmergencyContacts(){return this.useMockData?(await g(),[{id:1,category:"Security",name:"Building Security",phone:"+254712345670",available:"24/7",icon:"fas fa-shield-alt",color:"blue"},{id:2,category:"Fire",name:"Fire Department",phone:"999",available:"24/7",icon:"fas fa-fire-extinguisher",color:"red"},{id:3,category:"Medical",name:"Emergency Medical Services",phone:"911",available:"24/7",icon:"fas fa-ambulance",color:"green"},{id:4,category:"Police",name:"Police Emergency",phone:"999",available:"24/7",icon:"fas fa-shield",color:"indigo"},{id:5,category:"Property Management",name:"Property Manager",phone:"+254722111222",available:"Mon-Fri 9AM-6PM",icon:"fas fa-building",color:"purple"},{id:6,category:"Maintenance",name:"Emergency Maintenance",phone:"+254733222333",available:"24/7",icon:"fas fa-tools",color:"orange"}]):this.get("/tenant/emergency/contacts")}async reportEmergency(e){if(this.useMockData){await g(500);const t=`EMG-${Date.now().toString().slice(-8)}`,a={id:Date.now(),reportId:t,...e,status:"reported",reportedAt:(new Date).toISOString(),notificationsSent:{stakeholder:!0,security:!0,timestamp:(new Date).toISOString()}};return window.mockEmergencyReports||(window.mockEmergencyReports=[]),window.mockEmergencyReports.push(a),("critical"===e.severity||["fire","gas_leak","security"].includes(e.emergencyType))&&setTimeout(()=>{this.sendBuildingWideAlert({type:"emergency",title:`Emergency Alert: ${e.emergencyType.replace("_"," ").toUpperCase()}`,message:`An emergency has been reported in ${e.location}. Please follow evacuation procedures if instructed.`,priority:"urgent",emergencyReportId:t})},1e3),{success:!0,reportId:t,emergencyReport:a,message:"Emergency report submitted successfully. Notifications sent to property management and security."}}return this.post("/tenant/emergency/report",e)}async getEmergencyReport(e){if(this.useMockData){await g();const t=(window.mockEmergencyReports||[]).find(t=>t.reportId===e);if(!t)throw new Error("Emergency report not found");return t}return this.get(`/tenant/emergency/report/${e}`)}async getEvacuationMap(e){return this.useMockData?(await g(),{floor:e,mapUrl:`/maps/floor-${e}-evacuation.pdf`,exits:[{id:1,location:"North Stairwell",type:"stairs"},{id:2,location:"South Stairwell",type:"stairs"},{id:3,location:"East Exit",type:"door"},{id:4,location:"West Exit",type:"door"}],fireExtinguishers:[{id:1,location:"Near North Stairwell"},{id:2,location:"Near South Stairwell"},{id:3,location:"Hallway Center"}],assemblyPoints:[{id:1,name:"Primary Assembly Point",location:"Front Parking Lot"},{id:2,name:"Secondary Assembly Point",location:"Back Garden Area"}]}):this.get("/tenant/emergency/evacuation-map",{floor:e})}async sendBuildingWideAlert(e){if(this.useMockData){await g(500);const t={id:Date.now(),...e,sentAt:(new Date).toISOString(),recipients:"all_tenants",deliveryStatus:"delivered"};return window.mockBuildingAlerts||(window.mockBuildingAlerts=[]),window.mockBuildingAlerts.unshift(t),window.dispatchEvent&&window.dispatchEvent(new CustomEvent("buildingAlert",{detail:t})),{success:!0,alert:t,message:"Alert sent to all tenants successfully"}}return this.post("/admin/emergency/alert",e)}async getBuildingAlerts(e=10){if(this.useMockData){await g();return(window.mockBuildingAlerts||[]).slice(0,e)}return this.get("/tenant/emergency/alerts",{limit:e})}async acknowledgeAlert(e){if(this.useMockData){await g();const t=(window.mockBuildingAlerts||[]).find(t=>t.id===e);return t&&(t.acknowledged=!0,t.acknowledgedAt=(new Date).toISOString()),{success:!0}}return this.post(`/tenant/emergency/alerts/${e}/acknowledge`)}async getGuests(){if(this.useMockData){if(await g(),!window.mockGuests){const e=new Date;window.mockGuests=[{id:1,guestName:"John Smith",guestPhone:"+254722111222",expectedArrival:new Date(e.getTime()+72e5).toISOString(),accessCode:"123456",codeExpiry:new Date(e.getTime()+864e5).toISOString(),status:"pending",createdAt:new Date(e.getTime()-18e5).toISOString(),arrivedAt:null},{id:2,guestName:"Sarah Johnson",guestPhone:"+254733222333",expectedArrival:new Date(e.getTime()-36e5).toISOString(),accessCode:"789012",codeExpiry:new Date(e.getTime()+828e5).toISOString(),status:"arrived",createdAt:new Date(e.getTime()-72e5).toISOString(),arrivedAt:new Date(e.getTime()-36e5).toISOString()},{id:3,guestName:"Michael Brown",guestPhone:"+254744333444",expectedArrival:new Date(e.getTime()-9e7).toISOString(),accessCode:"345678",codeExpiry:new Date(e.getTime()-36e5).toISOString(),status:"expired",createdAt:new Date(e.getTime()-936e5).toISOString(),arrivedAt:null}]}return window.mockGuests.sort((e,t)=>new Date(t.createdAt)-new Date(e.createdAt))}return this.get("/tenant/guests")}async registerGuest(e){if(this.useMockData){await g();const t=Math.floor(1e5+9e5*Math.random()).toString(),a=new Date,n={id:Date.now(),guestName:e.guestName,guestPhone:e.guestPhone,expectedArrival:e.expectedArrival,accessCode:t,codeExpiry:new Date(a.getTime()+864e5).toISOString(),status:"pending",createdAt:a.toISOString(),arrivedAt:null};return window.mockGuests||(window.mockGuests=[]),window.mockGuests.unshift(n),setTimeout(()=>{},500),{success:!0,guest:n,message:"Guest registered successfully. Access code sent via SMS."}}return this.post("/tenant/guests",e)}async cancelGuestRegistration(e){if(this.useMockData){await g();const t=window.mockGuests||[],a=t.findIndex(t=>t.id===e);if(-1!==a)return t.splice(a,1),{success:!0,message:"Guest registration cancelled"};throw new Error("Guest not found")}return this.delete(`/tenant/guests/${e}`)}async grantRemoteAccess(e){if(this.useMockData){await g(500);const t=(window.mockGuests||[]).find(t=>t.id===e);if(!t)throw new Error("Guest not found");const a={guestId:e,guestName:t.guestName,grantedAt:(new Date).toISOString(),grantedBy:"tenant",accessType:"remote_gate_access"};return window.mockAccessGrants||(window.mockAccessGrants=[]),window.mockAccessGrants.push(a),{success:!0,message:`Remote access granted to ${t.guestName}. Gate will open automatically.`,accessGranted:a}}return this.post(`/tenant/guests/${e}/access`)}async simulateGuestArrival(e){if(this.useMockData){await g();const t=(window.mockGuests||[]).find(t=>t.id===e);if(!t)throw new Error("Guest not found");return t.status="arrived",t.arrivedAt=(new Date).toISOString(),setTimeout(()=>{window.dispatchEvent&&window.dispatchEvent(new CustomEvent("guestArrival",{detail:{guestId:t.id,guestName:t.guestName,arrivedAt:t.arrivedAt}}))},500),{success:!0,guest:t,message:"Guest arrival recorded. Notification sent to tenant."}}return this.post(`/tenant/guests/${e}/arrival`)}},w=t.createContext(null),y=()=>{const e=t.useContext(w);if(!e)throw new Error("useAuth must be used within AuthProvider");return e},f=({children:a})=>{const[n,i]=t.useState(null),[s,o]=t.useState(!0),[r,c]=t.useState(!1);t.useEffect(()=>{u()},[]);const u=async()=>{try{if(h.getAuthToken()){const e=await h.getCurrentUser();i(e),c(!0)}}catch(e){h.setAuthToken(null)}finally{o(!1)}};return e.jsx(w.Provider,{value:{user:n,loading:s,isAuthenticated:r,login:async e=>{const t=await h.login(e);return i(t.user),c(!0),t},signup:async e=>{const t=await h.signup(e);return t.token&&(i(t.user),c(!0)),t},logout:async()=>{await h.logout(),i(null),c(!1)}},children:a})},D=({size:t="md",text:a="Loading...",fullScreen:n=!1})=>{const i=e.jsxs("div",{className:"flex flex-col items-center justify-center",children:[e.jsx("div",{className:`${{sm:"w-4 h-4 border-2",md:"w-8 h-8 border-3",lg:"w-12 h-12 border-4",xl:"w-16 h-16 border-4"}[t]} border-blue-600 border-t-transparent rounded-full animate-spin`,role:"status","aria-label":"Loading"}),a&&e.jsx("p",{className:"mt-3 text-gray-600 text-sm",children:a})]});return n?e.jsx("div",{className:"fixed inset-0 bg-white bg-opacity-90 flex items-center justify-center z-50",children:i}):i},S=({role:i,menuItems:r})=>{const c=a(),[u,d]=t.useState(!1),l=()=>{d(!1)};return e.jsxs(e.Fragment,{children:[e.jsx("button",{onClick:()=>{d(!u)},className:"lg:hidden fixed top-4 left-4 z-50 p-2 bg-gray-900 text-white rounded-lg shadow-lg hover:bg-gray-800 transition-colors touch-manipulation",style:{minWidth:"44px",minHeight:"44px"},"aria-label":"Toggle menu",children:u?e.jsx(s,{size:24}):e.jsx(o,{size:24})}),u&&e.jsx("div",{className:"lg:hidden fixed inset-0 bg-black bg-opacity-50 z-30",onClick:l,"aria-hidden":"true"}),e.jsxs("aside",{className:`\n          fixed lg:static inset-y-0 left-0 z-40\n          w-64 bg-gray-900 text-white min-h-screen p-4 sm:p-6\n          transform transition-transform duration-300 ease-in-out\n          ${u?"translate-x-0":"-translate-x-full lg:translate-x-0"}\n          overflow-y-auto\n        `,children:[e.jsxs("div",{className:"mb-6 sm:mb-8 pt-12 lg:pt-0",children:[e.jsx("h2",{className:"text-xl sm:text-2xl font-bold",children:"NyumbaSync"}),e.jsxs("p",{className:"text-gray-400 text-xs sm:text-sm mt-1 capitalize",children:[i," Portal"]})]}),e.jsx("nav",{children:e.jsx("ul",{className:"space-y-1 sm:space-y-2",children:r.map(t=>{const a=c.pathname===t.path;return e.jsx("li",{children:e.jsxs(n,{to:t.path,onClick:l,className:`\n                      flex items-center space-x-3 px-3 sm:px-4 py-3 rounded-lg transition\n                      touch-manipulation\n                      ${a?"bg-blue-600 text-white":"text-gray-300 hover:bg-gray-800 active:bg-gray-700"}\n                    `,style:{minHeight:"44px"},children:[e.jsx("i",{className:`${t.icon} text-base sm:text-lg`}),e.jsx("span",{className:"text-sm sm:text-base",children:t.label})]})},t.path)})})})]})]})},k=({children:t,role:a,menuItems:n})=>{const s=i(),{user:o,logout:c}=y();return e.jsxs("div",{className:"flex min-h-screen bg-gray-100",children:[e.jsx(S,{role:a,menuItems:n}),e.jsxs("div",{className:"flex-1 flex flex-col lg:ml-0",children:[e.jsx("header",{className:"bg-white shadow-sm px-4 sm:px-6 py-3 sm:py-4 sticky top-0 z-20",children:e.jsxs("div",{className:"flex justify-between items-center",children:[e.jsx("h1",{className:"hidden sm:block text-lg sm:text-2xl font-semibold text-gray-800 ml-12 lg:ml-0",children:"Dashboard"}),e.jsx("div",{className:"sm:hidden w-12"}),e.jsxs("div",{className:"flex items-center space-x-2 sm:space-x-4",children:[e.jsxs("div",{className:"text-right",children:[e.jsx("p",{className:"text-xs sm:text-sm font-medium text-gray-800 truncate max-w-[120px] sm:max-w-none",children:(null==o?void 0:o.name)||"User"}),e.jsx("p",{className:"text-xs text-gray-500 capitalize hidden sm:block",children:a})]}),e.jsxs("button",{onClick:async()=>{await c(),s("/login")},className:"px-3 sm:px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 active:bg-red-800 transition touch-manipulation flex items-center gap-1 sm:gap-2",style:{minHeight:"44px",minWidth:"44px"},"aria-label":"Logout",children:[e.jsx(r,{size:16,className:"sm:w-4 sm:h-4"}),e.jsx("span",{className:"hidden sm:inline text-sm",children:"Logout"})]})]})]})}),e.jsx("main",{className:"flex-1 p-3 sm:p-4 md:p-6 overflow-auto",children:t})]})]})},v=({title:t,value:a,subtitle:n,icon:i,color:s="blue"})=>e.jsx("div",{className:"bg-white rounded-lg shadow p-6",children:e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{className:"flex-1",children:[e.jsx("p",{className:"text-sm font-medium text-gray-600",children:t}),e.jsx("p",{className:"text-3xl font-bold text-gray-900 mt-2",children:a}),n&&e.jsx("p",{className:"text-sm text-gray-500 mt-1",children:n})]}),i&&e.jsx("div",{className:`${{blue:"bg-blue-500",green:"bg-green-500",yellow:"bg-yellow-500",red:"bg-red-500",purple:"bg-purple-500"}[s]} p-4 rounded-full`,children:e.jsx("i",{className:`${i} text-white text-2xl`})})]})});export{f as A,k as D,D as L,v as S,h as a,y as u};
